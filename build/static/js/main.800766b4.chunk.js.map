{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogReducer.js","components/Comments.js","components/Blog.js","components/LoginForm.js","components/BlogForm.js","components/Notification.js","components/Togglable.js","components/SignUpForm.js","services/login.js","reducers/loginReducer.js","services/users.js","reducers/userReducer.js","components/Users.js","components/BlogList.js","components/User.js","components/Menu.js","App.js","store.js","index.js"],"names":["timeoutId","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","update","id","put","remove","delete","addComment","comment","setNotification","notification","timeInSeconds","timeInMilliseconds","clearTimeout","dispatch","type","payload","message","status","setTimeout","reducer","state","action","createBlog","blog","blogService","returnedBlog","updateBlog","updatedBlog","removeBlog","error","updatedBlogs","map","filter","Comment","disableGutters","divider","Comments","comments","createComment","Box","my","Typography","variant","component","gutterBottom","onSubmit","event","preventDefault","target","value","name","dense","content","Blog","blogId","useParams","useSelector","blogs","find","b","useDispatch","incrementLikes","commentsId","newBlog","title","author","url","likes","user","exception","deleteBlog","window","confirm","className","Link","color","href","rel","ml","Button","size","onClick","mt","loginForm","username","password","handleLogin","handleUsernameChange","handlePasswordChange","TextField","label","onChange","required","BlogForm","useState","setTitle","setAuthor","setUrl","Notification","Alert","severity","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","buttonLabel","children","displayName","SignUpForm","handleSignUp","setUsername","setName","setPassword","login","credentials","loginService","localStorage","setItem","JSON","stringify","userInfo","Users","users","useEffect","userService","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","to","length","BlogList","class","button","User","u","useStyles","makeStyles","typographyStyle","textTransform","Menu","classes","AppBar","position","Toolbar","removeItem","App","loggedUserJSON","getItem","undefined","parse","displayNotificationWith","seconds","uniqueUsernameMessage","includes","handleInputOnChange","callback","addBlog","blogObject","blogFormRef","current","useRef","signUpFormRef","sortedBlogsByLikes","sort","LoginForm","path","combineReducers","blogReducer","notificationReducer","loginReducer","userReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.800766b4.chunk.js","sourcesContent":["const reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.payload\n    case 'CLEAR_NOTIFICATION':\n      return null\n    default:\n      return state\n  }\n}\n\nlet timeoutId\n\nexport const setNotification = (notification, timeInSeconds = 3) => {\n  const timeInMilliseconds = timeInSeconds * 1000\n  clearTimeout(timeoutId)\n\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      payload: {\n        message: notification.message,\n        status: notification.status,\n      }\n    })\n\n    timeoutId = setTimeout(() => {\n      dispatch({ type: 'CLEAR_NOTIFICATION' })\n    }, timeInMilliseconds)\n  }\n}\n\nexport default reducer","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nconst addComment = async (id, comment) => {\n  const response = await axios.post(`${baseUrl}/${id}/comments`, comment)\n  return response.data\n}\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  remove,\n  addComment\n}","import blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_BLOGS':\n      return action.payload\n    case 'NEW_BLOG':\n      return [...state, action.payload]\n    case 'UPDATE_BLOG': {\n      const id = action.payload.id\n      const updatedBlogs = state.map(blog =>\n        blog.id !== id ? blog : action.payload.data\n      )\n      return updatedBlogs\n    }\n    case 'REMOVE_BLOG': {\n      const id = action.payload.id\n      return state.filter(blog => blog.id !== id)\n    }\n    default:\n      return state\n  }\n}\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    const blogs = await blogService.getAll()\n    dispatch({\n      type: 'INIT_BLOGS',\n      payload: blogs\n    })\n  }\n}\n\nexport const createBlog = (blog) => {\n  return async dispatch => {\n    const returnedBlog = await blogService.create(blog)\n    dispatch({\n      type: 'NEW_BLOG',\n      payload: returnedBlog\n    })\n  }\n}\n\nexport const updateBlog = (id, blog) => {\n  return async dispatch => {\n    const updatedBlog = await blogService.update(\n      id,\n      blog\n    )\n    dispatch({\n      type: 'UPDATE_BLOG',\n      payload: {\n        data: updatedBlog,\n        id\n      }\n    })\n  }\n}\n\nexport const removeBlog = (id) => {\n  return async dispatch => {\n    try {\n      await blogService.remove(id)\n      dispatch({\n        type: 'REMOVE_BLOG',\n        payload: { id }\n      })\n    } catch (e) {\n      dispatch( setNotification({ message: e.response.data.error, status: 'error' }) )\n    }\n  }\n}\n\nexport const addComment = (blogId, comment) => {\n  return async dispatch => {\n    const returnedBlog = await blogService.addComment(blogId, { comment })\n    dispatch({\n      type: 'UPDATE_BLOG',\n      payload: {\n        data: returnedBlog,\n        id: blogId\n      }\n    })\n  }\n}\n\nexport default reducer","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\nimport { List, ListItem, ListItemText } from '@material-ui/core/index'\n\nconst Comment = ({ comment }) => {\n  return (\n    <ListItem disableGutters divider>\n      <ListItemText>\n        {comment}\n      </ListItemText>\n    </ListItem>\n  )\n}\n\nconst Comments = ({ comments, createComment }) => {\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const comment = event.target.comment.value\n    event.target.comment.value = ''\n\n    createComment(comment)\n  }\n\n  return (\n    <Box my={2}>\n      <Typography variant='h5' component='h3' gutterBottom>comments</Typography>\n\n      <form onSubmit={handleSubmit}>\n        <input name='comment' />\n        <button type='submit'>add comment</button>\n      </form>\n\n      <List dense>\n        {comments.map(comment =>\n          <Comment key={comment.id} comment={comment.content} />\n        )}\n      </List>\n    </Box>\n  )\n}\n\nexport default Comments\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { updateBlog, removeBlog, addComment } from '../reducers/blogReducer'\nimport { Typography, Link, Button, Box } from '@material-ui/core'\n\nimport Comments from './Comments'\n\nconst Blog = ({ setNotification }) => {\n  const id = useParams().id\n  const blog = useSelector(state =>\n    state.blogs.find(b => b.id === id)\n  )\n  const dispatch = useDispatch()\n\n  const incrementLikes = async () => {\n    const commentsId = blog.comments.map(comment => comment.id)\n\n    const newBlog = {\n      title: blog.title,\n      author: blog.author,\n      url: blog.url,\n      likes: blog.likes + 1,\n      user: blog.user.id,\n      comments: commentsId\n    }\n\n    try {\n      dispatch( updateBlog(blog.id, newBlog) )\n    } catch (exception) {\n      setNotification(exception.response.data.error, 'error')\n    }\n  }\n\n  const deleteBlog = async () => {\n    const confirmedDeletion = window.confirm(`Remove blog ${blog.title} by ${blog.author}`)\n\n    if (confirmedDeletion) {\n      dispatch( removeBlog(blog.id) )\n    }\n  }\n\n  const createComment = blogId => {\n    return comment => {\n      dispatch( addComment(blogId, comment) )\n    }\n  }\n\n  if (!blog) return null\n\n  return (\n    <div className='blog'>\n      <Typography variant='h4' component='h2' gutterBottom>\n        {blog.title} {blog.author}\n      </Typography>\n\n      <Link color='primary' href={blog.url} target='_blank' rel='noreferrer'>\n        {blog.url}\n      </Link>\n\n      <Typography variant='body1' component='div'>\n        likes {blog.likes}\n\n        <Box component='span' ml={1}>\n          <Button\n            variant='contained'\n            color='primary'\n            size='small'\n            onClick={incrementLikes}\n          >\n            like\n          </Button>\n        </Box>\n      </Typography>\n\n      <Typography variant='body1' component='div'>\n        added by {blog.author}\n      </Typography>\n\n      <Box mt={1}>\n        <Button variant='contained' size='small' onClick={deleteBlog}>\n          remove\n        </Button>\n      </Box>\n\n      <Comments comments={blog.comments} createComment={createComment(blog.id)} />\n    </div>\n  )\n}\n\nexport default Blog","import React from 'react'\nimport { TextField, Button, Box } from '@material-ui/core'\n\nconst loginForm = ({\n  username,\n  password,\n  handleLogin,\n  handleUsernameChange,\n  handlePasswordChange\n}) => {\n  return (\n    <form onSubmit={handleLogin}>\n      <div>\n        <TextField\n          id='username'\n          label='username'\n          value={username}\n          onChange={handleUsernameChange}\n          required\n        />\n      </div>\n      <div>\n        <TextField\n          id='password'\n          label='password'\n          type='password'\n          value={password}\n          onChange={handlePasswordChange}\n          required\n        />\n      </div>\n      <Box mt={1}>\n        <Button variant='contained' color='primary' type='submit'>\n          login\n        </Button>\n      </Box>\n    </form>\n  )\n}\n\nexport default loginForm\n","import React, { useState } from 'react'\nimport { TextField, Button, Box, Typography } from '@material-ui/core'\n\nconst BlogForm = ({ createBlog }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    createBlog({\n      title,\n      author,\n      url\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <div>\n      <Typography variant='h4' component='h2' gutterBottom>Create new</Typography>\n\n      <form onSubmit={addBlog}>\n        <div>\n          <TextField\n            id='title'\n            label='title'\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n            variant='outlined'\n          />\n        </div>\n        <div>\n          <TextField\n            id='author'\n            label='author'\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n            variant='outlined'\n          />\n        </div>\n        <div>\n          <TextField\n            id='url'\n            label='url'\n            value={url}\n            onChange={({ target }) => setUrl(target.value)}\n            variant='outlined'\n          />\n        </div>\n\n        <Box my={1}>\n          <Button variant='contained' color='primary' type='submit'>\n            create\n          </Button>\n        </Box>\n      </form>\n    </div>\n  )\n}\n\nexport default BlogForm\n","import React from 'react'\nimport { Alert } from '@material-ui/lab'\n\nconst Notification = ({ notification }) => {\n  if (notification === null) return null\n\n  return (\n    <Alert severity={notification.status}>\n      {notification.message}\n    </Alert>\n  )\n}\n\nexport default Notification\n","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport Box from '@material-ui/core/Box'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <Box mt={2}>\n      <div style={hideWhenVisible}>\n        <Button variant='contained' onClick={toggleVisibility}>\n          {props.buttonLabel}\n        </Button>\n      </div>\n\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button variant='contained' color='secondary' onClick={toggleVisibility}>\n          cancel\n        </Button>\n      </div>\n    </Box>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable\n","import React, { useState } from 'react'\nimport { TextField, Button, Box } from '@material-ui/core'\n\nconst SignUpForm = ({ handleSignUp }) => {\n  const [username, setUsername] = useState('')\n  const [name, setName] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    handleSignUp({\n      username,\n      name,\n      password\n    })\n\n    setUsername('')\n    setName('')\n    setPassword('')\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <TextField\n          id='username'\n          label='username'\n          value={username}\n          onChange={({ target }) => setUsername(target.value)}\n          required\n        />\n      </div>\n      <div>\n        <TextField\n          id='name'\n          label='name'\n          value={name}\n          onChange={({ target }) => setName(target.value)}\n          required\n        />\n      </div>\n      <div>\n        <TextField\n          id='password'\n          label='password'\n          type='password'\n          value={password}\n          onChange={({ target }) => setPassword(target.value)}\n          required\n        />\n      </div>\n      <Box mt={1}>\n        <Button variant='contained' color='primary' type='submit'>\n          Sign Up\n        </Button>\n      </Box>\n    </form>\n  )\n}\n\nexport default SignUpForm\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport { setNotification } from './notificationReducer'\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return action.payload\n    case 'LOGOUT':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const checkLoggedUser = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n\n    if (!loggedUserJSON) return undefined\n\n    const user = JSON.parse(loggedUserJSON)\n    blogService.setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      payload: user\n    })\n  }\n}\n\nexport const login = (username, password) => {\n  return async dispatch => {\n    try {\n      const user = await loginService.login({ username, password })\n\n      blogService.setToken(user.token)\n      window.localStorage.setItem(\n        'loggedBlogappUser',\n        JSON.stringify(user)\n      )\n\n      dispatch({\n        type: 'LOGIN',\n        payload: user\n      })\n    } catch (exception) {\n      dispatch(setNotification(\n        {\n          message: exception.response.data.error,\n          status: 'error'\n        },\n        3\n      ))\n    }\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    blogService.setToken(null)\n    window.localStorage.removeItem('loggedBlogappUser')\n\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport default reducer","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async (userInfo) => {\n  const response = await axios.post(baseUrl, userInfo)\n  return response.data\n}\n\nexport default {\n  getAll,\n  create\n}","import userService from '../services/users'\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_USERS':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport const initializeUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      payload: users\n    })\n  }\n}\n\nexport default reducer","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { initializeUsers } from '../reducers/userReducer'\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  Paper,\n} from '@material-ui/core'\n\nconst Users = () => {\n  const users = useSelector(state => state.users)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch( initializeUsers() )\n  }, [])\n\n  return (\n    <div>\n      <h2>Users</h2>\n\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>User</TableCell>\n              <TableCell>blogs created</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map(user =>\n              <TableRow key={user.id}>\n                <TableCell>\n                  <Link to={`/users/${user.id}`}>\n                    {user.name}\n                  </Link>\n                </TableCell>\n                <TableCell>\n                  {user.blogs.length}\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default Users\n","import React from 'react'\nimport { List, ListItem, ListItemText } from '@material-ui/core/index'\nimport { Link } from 'react-router-dom'\n\nconst BlogList = ({ blogs }) => {\n  return (\n    <List class=\"blogs\">\n      {blogs.map(blog =>\n        <ListItem key={blog.id} component={Link} to={`/blogs/${blog.id}`} button divider>\n          <ListItemText>\n            {blog.title}\n          </ListItemText>\n        </ListItem>\n      )}\n    </List>\n  )\n}\n\nexport default BlogList\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport Typography from '@material-ui/core/Typography'\nimport BlogList from './BlogList'\n\nconst User = () => {\n  const id = useParams().id\n  const user = useSelector(state =>\n    state.users.find(u => u.id === id)\n  )\n\n  if (!user) return null\n\n  return (\n    <div>\n      <Typography variant='h4' component='h2'>{user.name}&apos;s blogs</Typography>\n      <BlogList blogs={user.blogs} />\n    </div>\n  )\n}\n\nexport default User\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AppBar,\n  Toolbar,\n  Button,\n  Typography,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../reducers/loginReducer'\n\nconst useStyles = makeStyles({\n  typographyStyle: {\n    textTransform: 'uppercase'\n  }\n})\n\nconst Menu = () => {\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n  const classes = useStyles()\n\n  return (\n    <AppBar position='static'>\n      <Toolbar>\n        <Button color='inherit' component={Link} to='/'>\n          blogs\n        </Button>\n\n        <Button color='inherit' component={Link} to='/users'>\n          users\n        </Button>\n\n        <Typography className={classes.typographyStyle} component='em'>\n          {user.name} logged in\n        </Typography>\n\n        <Button color='inherit' onClick={() => dispatch( logout() )}>\n          logout\n        </Button>\n      </Toolbar>\n    </AppBar>\n\n  )\n}\n\nexport default Menu\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\nimport { Container, Typography } from '@material-ui/core/index'\n\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport SignUpForm from './components/SignUpForm'\n\nimport { setNotification } from './reducers/notificationReducer'\nimport { initializeBlogs, createBlog } from './reducers/blogReducer'\nimport { checkLoggedUser, login } from './reducers/loginReducer'\nimport Users from './components/Users'\nimport User from './components/User'\nimport Menu from './components/Menu'\nimport BlogList from './components/BlogList'\nimport userService from './services/users'\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const blogs = useSelector(state => state.blogs)\n  const notification = useSelector(state => state.notification)\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch( initializeBlogs() )\n  }, [])\n\n  useEffect(() => {\n    dispatch( checkLoggedUser() )\n  }, [])\n\n  const displayNotificationWith = (message, status='success') => {\n    const seconds = 5\n    dispatch( setNotification({ message, status }, seconds) )\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    dispatch( login(username, password) )\n\n    setUsername('')\n    setPassword('')\n  }\n\n  const handleSignUp = async ({ username, name, password }) => {\n    try {\n      await userService.create({ \n        username,\n        name,\n        password,\n      })\n      dispatch( login(username, password) )\n    } catch (error) {\n      const message = error.response.data.error\n      const uniqueUsernameMessage = `The username: '${username}' has already been taken`\n      const uniqueUsernameError = 'expected `username` to be unique'\n\n      if ( message.includes(uniqueUsernameError) ) {\n        return displayNotificationWith(uniqueUsernameMessage, 'error')\n      }\n\n      displayNotificationWith(message, 'error')\n    }\n  }\n\n  const handleInputOnChange = (callback) => {\n    return ({ target }) => {\n      callback(target.value)\n    }\n  }\n\n  const addBlog = async (blogObject) => {\n\n    try {\n      dispatch( createBlog(blogObject) )\n\n      blogFormRef.current.toggleVisibility()\n      displayNotificationWith(\n        `a new blog ${blogObject.title} by ${blogObject.author} added`\n      )\n    } catch (exception) {\n      displayNotificationWith(exception.response.data.error, 'error')\n    }\n  }\n\n  const blogFormRef = useRef()\n  const signUpFormRef = useRef()\n\n  // Sort in descending order\n  const sortedBlogsByLikes = blogs.sort((a,b) => b.likes - a.likes)\n\n  if (user === null) {\n    return (\n      <Container>\n        <Typography variant='h4' component='h2'>\n          Log in to application\n        </Typography>\n        <Notification notification={notification} />\n        <LoginForm\n          username={username}\n          password={password}\n          handleLogin={handleLogin}\n          handleUsernameChange={handleInputOnChange(setUsername)}\n          handlePasswordChange={handleInputOnChange(setPassword)}\n        />\n        <Togglable buttonLabel='Sign Up' ref={signUpFormRef}>\n          <SignUpForm handleSignUp={handleSignUp} />\n        </Togglable>\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <Typography variant='h4' component='h2'>\n        blogs\n      </Typography>\n      <Menu />\n      <Notification notification={notification} />\n\n      <Switch>\n        <Route path='/users/:id'>\n          <User />\n        </Route>\n        <Route path='/users'>\n          <Users />\n        </Route>\n        <Route path='/blogs/:id'>\n          <Blog setNotification={displayNotificationWith} />\n        </Route>\n        <Route path='/'>\n          <Togglable buttonLabel='create new blog' ref={blogFormRef}>\n            <BlogForm createBlog={addBlog} />\n          </Togglable>\n\n          <BlogList blogs={sortedBlogsByLikes} />\n        </Route>\n      </Switch>\n    </Container>\n  )\n}\n\nexport default App","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport blogReducer from './reducers/blogReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport loginReducer from './reducers/loginReducer'\nimport userReducer from './reducers/userReducer'\n\nconst reducer = combineReducers({\n  blogs: blogReducer,\n  notification: notificationReducer,\n  user: loginReducer,\n  users: userReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}